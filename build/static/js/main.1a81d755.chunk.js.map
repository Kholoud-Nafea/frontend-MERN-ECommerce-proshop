{"version":3,"sources":["constants/productConstants.js","constants/cartConstants.js","constants/userConstants.js","constants/orderConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","components/SearchBox.js","actions/userActions.js","components/Header.js","components/Footer.js","actions/productActions.js","components/Loader.js","components/Message.js","components/Paginate.js","components/Meta.js","components/Rating.js","components/Product.js","components/ProductCarousel.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderAction.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen .js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","CART_ADD_ITEM","CART_REMOVE_ITEM","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","ORDER_MY_LIST_REQUEST","ORDER_MY_LIST_SUCCESS","ORDER_MY_LIST_FAIL","ORDER_MY_LIST_RESET","ORDER_ALL_LIST_REQUEST","ORDER_ALL_LIST_SUCCESS","ORDER_ALL_LIST_FAIL","ORDER_ALL_LIST_RESET","reducer","combineReducers","productList","state","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productCreateReview","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","shippingAddess","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderListMy","orders","orderDeliver","orderList","cartItemFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","SearchBox","history","useState","keyword","setKeyword","Form","inline","onSubmit","e","preventDefault","trim","push","Control","name","onChange","target","value","placeholder","className","Button","variant","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","Header","useDispatch","useSelector","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","isAdmin","Footer","Row","Col","listProducts","pageNumber","listProductDetails","Loader","Spinner","animation","role","style","width","height","margin","display","Message","children","Alert","defaultProps","Paginate","Pagination","Array","keys","active","Meta","description","keywords","Helmet","content","Rating","text","color","protoType","PropTypes","number","isRequired","string","Product","Card","_id","Img","src","image","Body","Title","as","Text","rating","numReviews","price","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","successProductReview","errorProductReview","alert","ListGroup","countInStock","disabled","length","review","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","location","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","header","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","createdAt","substring","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","console","log","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","document","createElement","async","onload","body","appendChild","window","paypal","href","amount","onSuccess","paymentResult","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","UserEditScreen","userId","setIsAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1a81d755.chunk.js","sourcesContent":["export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","export const CART_ADD_ITEM = 'CART_ADD_ITEM'\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM'\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS'\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD'\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\r\nexport const USER_LOGOUT = 'USER_LOGOUT'\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","export const ORDER_CREATE_REQUEST = \"ORDER_CREATE_REQUEST\";\r\nexport const ORDER_CREATE_SUCCESS = \"ORDER_CREATE_SUCCESS\";\r\nexport const ORDER_CREATE_FAIL = \"ORDER_CREATE_FAIL\";\r\n\r\nexport const ORDER_DETAILS_REQUEST = \"ORDER_DETAILS_REQUEST\";\r\nexport const ORDER_DETAILS_SUCCESS = \"ORDER_DETAILS_SUCCESS\";\r\nexport const ORDER_DETAILS_FAIL = \"ORDER_DETAILS_FAIL\";\r\n\r\nexport const ORDER_PAY_REQUEST = \"ORDER_PAY_REQUEST\";\r\nexport const ORDER_PAY_SUCCESS = \"ORDER_PAY_SUCCESS\";\r\nexport const ORDER_PAY_FAIL = \"ORDER_PAY_FAIL\";\r\nexport const ORDER_PAY_RESET = \"ORDER_PAY_RESET\";\r\n\r\nexport const ORDER_DELIVER_REQUEST = \"ORDER_DELIVER_REQUEST\";\r\nexport const ORDER_DELIVER_SUCCESS = \"ORDER_DELIVER_SUCCESS\";\r\nexport const ORDER_DELIVER_FAIL = \"ORDER_DELIVER_FAIL\";\r\nexport const ORDER_DELIVER_RESET = \"ORDER_DELIVER_RESET\";\r\n\r\nexport const ORDER_MY_LIST_REQUEST = \"ORDER_MY_LIST_REQUEST\";\r\nexport const ORDER_MY_LIST_SUCCESS = \"ORDER_MY_LIST_SUCCESS\";\r\nexport const ORDER_MY_LIST_FAIL = \"ORDER_MY_LIST_FAIL\";\r\nexport const ORDER_MY_LIST_RESET = \"ORDER_MY_LIST_RESET\";\r\n\r\n\r\n\r\nexport const ORDER_ALL_LIST_REQUEST = \"ORDER_ALL_LIST_REQUEST\";\r\nexport const ORDER_ALL_LIST_SUCCESS = \"ORDER_ALL_LIST_SUCCESS\";\r\nexport const ORDER_ALL_LIST_FAIL = \"ORDER_ALL_LIST_FAIL\";\r\nexport const ORDER_ALL_LIST_RESET = \"ORDER_ALL_LIST_RESET\";\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from \"redux-devtools-extension\"\r\nimport { \r\n    productListReducer, \r\n    productDetailsReducer, \r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productCreateReviewReducer,\r\n    productTopRatedReducer,\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userReisterReducer,\r\n    userDetailsReducer,\r\n    userUpddateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer,\r\n} from './reducers/userReducers'\r\nimport { \r\n    orderCreateReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderMyListReducer,\r\n    orderDeliverReducer,\r\n    orderListReducer,\r\n} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: productListReducer,\r\n    productDetails: productDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productCreateReview: productCreateReviewReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userReisterReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpddateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderListMy: orderMyListReducer,\r\n    orderDeliver:orderDeliverReducer,\r\n    orderList: orderListReducer,\r\n\r\n})\r\n\r\nconst cartItemFromStorage = localStorage.getItem('cartItems') ? JSON.parse\r\n(localStorage.getItem('cartItems')) : []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse\r\n(localStorage.getItem('userInfo')) : null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse\r\n(localStorage.getItem('shippingAddress')) : {}\r\n\r\nconst initialState ={\r\n    cart: { \r\n        cartItems: cartItemFromStorage,\r\n        shippingAddress: shippingAddressFromStorage \r\n    },\r\n    userLogin: {userLogin: userInfoFromStorage}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n)\r\n\r\nexport default store","import { \r\n    PRODUCT_DETAILS_REQUEST, \r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL, \r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_CREATE_RESET,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_CREATE_REVIEW_RESET,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    } from '../constants/productConstants'\r\nexport const productListReducer = (state = { products: [] }, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_LIST_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_LIST_SUCCESS:\r\n            return { \r\n                loading: false, \r\n                products: action.payload.products,\r\n                pages: action.payload.pages,\r\n                page: action.payload.page,\r\n             } //because the backend controller return products, pages, page\r\n        case PRODUCT_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDetailsReducer = (state = { product: { reviews: [] } }, action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_DETAILS_REQUEST:\r\n            return { loading: true, ...state }\r\n        case PRODUCT_DETAILS_SUCCESS:\r\n            return { loading: false, product: action.payload }\r\n        case PRODUCT_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productDeleteReducer = (state = {} , action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_DELETE_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case PRODUCT_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReducer = (state = {} , action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_CREATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_CREATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_RESET:\r\n            return {}    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productUpdateReducer = (state = { product: {} } , action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_UPDATE_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_UPDATE_SUCCESS:\r\n            return { loading: false, success: true, product: action.payload }\r\n        case PRODUCT_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_UPDATE_RESET:\r\n            return { product: {} }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productCreateReviewReducer = (state = {} , action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_CREATE_REVIEW_REQUEST:\r\n            return { loading: true, }\r\n        case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n            return { loading: false, success: true, }\r\n        case PRODUCT_CREATE_REVIEW_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case PRODUCT_CREATE_REVIEW_RESET:\r\n            return {}    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const productTopRatedReducer = (state = { products: [] } , action) =>{\r\n    switch (action.type) {\r\n        case PRODUCT_TOP_REQUEST:\r\n            return { loading: true, products: [] }\r\n        case PRODUCT_TOP_SUCCESS:\r\n            return { loading: false, products: action.payload }\r\n        case PRODUCT_TOP_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import { CART_ADD_ITEM,\r\n        CART_REMOVE_ITEM,\r\n        CART_SAVE_PAYMENT_METHOD,\r\n        CART_SAVE_SHIPPING_ADDRESS, \r\n    } from '../constants/cartConstants'\r\n\r\nexport const cartReducer = (state = { cartItems: [], shippingAddress: {} }, action) => {\r\n    switch(action.type) {\r\n        case CART_ADD_ITEM: \r\n            const item = action.payload\r\n\r\n            const existItem = state.cartItems.find(x => x.product === item.product)\r\n\r\n            if(existItem) {\r\n                return {\r\n                    ...state,\r\n                    cartItems: state.cartItems.map(x =>\r\n                        x.product === existItem.product ? item : x\r\n                    )\r\n                }\r\n            } else {\r\n                return {\r\n                    ...state,\r\n                    cartItems: [...state.cartItems, item]\r\n                }\r\n            }\r\n        case CART_REMOVE_ITEM:\r\n            return {\r\n                ...state,\r\n                cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n            }\r\n        case CART_SAVE_SHIPPING_ADDRESS:\r\n            return {\r\n                ...state,\r\n                shippingAddess: action.payload\r\n            }\r\n            case CART_SAVE_PAYMENT_METHOD:\r\n                return {\r\n                    ...state,\r\n                    paymentMethod: action.payload\r\n                }    \r\n                    \r\n        default:\r\n            return state\r\n    }\r\n}","import {\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_REGISTER_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_RESET,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_RESET,\r\n    } from '../constants/userConstants'\r\n\r\nexport const userLoginReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true}\r\n        case USER_LOGIN_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_LOGIN_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LOGOUT:\r\n            return {}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userReisterReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true}\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload }\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) =>{\r\n    switch (action.type) {\r\n        case USER_DETAILS_REQUEST:\r\n            return { ...state, loading: true}\r\n        case USER_DETAILS_SUCCESS:\r\n            return { loading: false, user: action.payload }\r\n        case USER_DETAILS_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_DETAILS_RESET:\r\n            return { user: {} }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpddateProfileReducer = (state = {}, action) =>{\r\n    switch (action.type) {\r\n        case USER_UPDATE_PROFILE_REQUEST:\r\n            return { loading: true}\r\n        case USER_UPDATE_PROFILE_SUCCESS:\r\n            return { loading: false, success:true, userInfo: action.payload }\r\n        case USER_UPDATE_PROFILE_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n\r\nexport const userListReducer = (state = { users: [] }, action) =>{\r\n    switch (action.type) {\r\n        case USER_LIST_REQUEST:\r\n            return { loading: true}\r\n        case USER_LIST_SUCCESS:\r\n            return { loading: false, users: action.payload }\r\n        case USER_LIST_FAIL:\r\n            return { loading: false, error: action.payload }\r\n        case USER_LIST_RESET:\r\n            return { users: [] }    \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userDeleteReducer = (state = { }, action) =>{\r\n    switch (action.type) {\r\n        case USER_DELETE_REQUEST:\r\n            return { loading: true}\r\n        case USER_DELETE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_DELETE_FAIL:\r\n            return { loading: false, error: action.payload }  \r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) =>{\r\n    switch (action.type) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true}\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, success: true }\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload } \r\n        case USER_UPDATE_RESET:\r\n            return { users: {} }   \r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {\r\n  ORDER_ALL_LIST_FAIL,\r\n  ORDER_ALL_LIST_REQUEST,\r\n  ORDER_ALL_LIST_RESET,\r\n  ORDER_ALL_LIST_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_MY_LIST_FAIL,\r\n  ORDER_MY_LIST_REQUEST,\r\n  ORDER_MY_LIST_RESET,\r\n  ORDER_MY_LIST_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_RESET,\r\n  ORDER_PAY_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return { loading: false, success: true, order: action.payload };\r\n    case ORDER_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return { loading: false, order: action.payload };\r\n    case ORDER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PAY_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_PAY_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ORDER_PAY_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DELIVER_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_DELIVER_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case ORDER_DELIVER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderMyListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_MY_LIST_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_MY_LIST_SUCCESS:\r\n      return { loading: false, orders: action.payload };\r\n    case ORDER_MY_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_MY_LIST_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_ALL_LIST_REQUEST:\r\n      return { loading: true };\r\n    case ORDER_ALL_LIST_SUCCESS:\r\n      return { loading: false, orders: action.payload };\r\n    case ORDER_ALL_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case ORDER_ALL_LIST_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\n\r\nconst SearchBox = ({ history }) => {\r\n   const [keyword, setKeyword] = useState('')\r\n\r\n   const submitHandler = (e) => {\r\n      e.preventDefault()\r\n      if(keyword.trim()) {\r\n         history.push(`/search/${keyword}`)\r\n      } else {\r\n         history.push('/')\r\n      }\r\n   }\r\n\r\n   return (\r\n      <Form inline onSubmit={submitHandler} >\r\n         <Form.Control\r\n            type='text'\r\n            name='q'\r\n            onChange={(e) => setKeyword(e.target.value)}\r\n            placeholder='Search Products...'\r\n            className='mr-sm-2 ml-sm-5'>\r\n         </Form.Control>\r\n         <Button type='submit' variant='outline-success' className='p-2'>\r\n            Search\r\n         </Button>\r\n      </Form>\r\n   )\r\n}\r\n\r\nexport default SearchBox\r\n","import axios from 'axios'\r\nimport {  USER_LOGIN_REQUEST,\r\n         USER_LOGIN_SUCCESS,\r\n         USER_LOGIN_FAIL,\r\n         USER_LOGOUT,\r\n         USER_DETAILS_RESET,\r\n         USER_REGISTER_REQUEST,\r\n         USER_REGISTER_SUCCESS,\r\n         USER_REGISTER_FAIL,\r\n         USER_DETAILS_REQUEST,\r\n         USER_DETAILS_SUCCESS,\r\n         USER_DETAILS_FAIL,\r\n         USER_UPDATE_PROFILE_REQUEST,\r\n         USER_UPDATE_PROFILE_SUCCESS,\r\n         USER_UPDATE_PROFILE_FAIL,\r\n         USER_LIST_REQUEST,\r\n         USER_LIST_SUCCESS,\r\n         USER_LIST_FAIL,\r\n         USER_LIST_RESET,\r\n         USER_DELETE_REQUEST,\r\n         USER_DELETE_SUCCESS,\r\n         USER_DELETE_FAIL,\r\n         USER_UPDATE_REQUEST,\r\n         USER_UPDATE_SUCCESS,\r\n         USER_UPDATE_FAIL,\r\n} from '../constants/userConstants'\r\nimport { ORDER_MY_LIST_RESET } from '../constants/orderConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            header: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message :\r\n                 error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('useInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: ORDER_MY_LIST_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n\r\n}\r\n\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            header: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, email, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message :\r\n                 error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/users/${id}`,\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message :\r\n                 error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/profile`, user, config)\r\n\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_PROFILE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message :\r\n                 error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message :\r\n                 error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n      await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message :\r\n                 error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const { userLogin: {userInfo} } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n      const { data } = await axios.put(`/api/users/${user._id}` , user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message :\r\n                 error.message\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\r\nimport SearchBox from './SearchBox'\r\nimport { logout } from '../actions/userActions'\r\n\r\nconst Header = () => {\r\n  const dispatch = useDispatch()\r\n\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n  const { userInfo } = userLogin\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n          <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect >\r\n            <Container>\r\n              <LinkContainer to='/'> \r\n                <Navbar.Brand >Proshop</Navbar.Brand>\r\n              </LinkContainer>\r\n             \r\n              <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n              <Navbar.Collapse id=\"basic-navbar-nav\">\r\n                <Route \r\n                  render={({ history }) => <SearchBox history={history} /> }\r\n                />\r\n                <Nav className=\"ml-auto\">\r\n                  <LinkContainer to='/cart'>\r\n                    <Nav.Link >\r\n                      <i className='fas fa-shopping-cart'></i> Cart\r\n                    </Nav.Link>\r\n                  </LinkContainer>\r\n\r\n                  {userInfo ? (\r\n                    <NavDropdown title={userInfo.name} id='username'>\r\n                      <LinkContainer to='/profile'>\r\n                        <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                      </LinkContainer>\r\n                      <NavDropdown.Item onClick={logoutHandler}>\r\n                        Logout\r\n                      </NavDropdown.Item>\r\n                    </NavDropdown>\r\n                  ) : ( \r\n                  <LinkContainer to='/login'>\r\n                  <Nav.Link >\r\n                    <i className='fas fa-user'></i>Sign In\r\n                   </Nav.Link>\r\n                </LinkContainer> \r\n                )}\r\n                {userInfo && userInfo.isAdmin && ( //if user exist and is admin then...\r\n                    <NavDropdown title='Admin' id='adminmenu'>\r\n                    <LinkContainer to='/admin/userlist'>\r\n                      <NavDropdown.Item>Users</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to='/admin/productlist'>\r\n                      <NavDropdown.Item>Products</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                    <LinkContainer to='/admin/orderlist'>\r\n                      <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                    </LinkContainer>\r\n                  </NavDropdown>\r\n                )}\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>Copyright &copy; proshop</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","import axios from 'axios'\r\nimport { PRODUCT_LIST_REQUEST,\r\n        PRODUCT_LIST_SUCCESS,\r\n        PRODUCT_LIST_FAIL,\r\n        PRODUCT_DETAILS_REQUEST,\r\n        PRODUCT_DETAILS_SUCCESS,\r\n        PRODUCT_DETAILS_FAIL,\r\n        PRODUCT_DELETE_REQUEST,\r\n        PRODUCT_DELETE_SUCCESS,\r\n        PRODUCT_DELETE_FAIL,\r\n        PRODUCT_CREATE_REQUEST,\r\n        PRODUCT_CREATE_SUCCESS,\r\n        PRODUCT_CREATE_FAIL,\r\n        PRODUCT_UPDATE_REQUEST,\r\n        PRODUCT_UPDATE_SUCCESS,\r\n        PRODUCT_UPDATE_FAIL,\r\n        PRODUCT_CREATE_REVIEW_REQUEST,\r\n        PRODUCT_CREATE_REVIEW_SUCCESS,\r\n        PRODUCT_CREATE_REVIEW_FAIL,\r\n        PRODUCT_TOP_REQUEST,\r\n        PRODUCT_TOP_SUCCESS,\r\n        PRODUCT_TOP_FAIL,\r\n} from '../constants/productConstants'\r\n\r\nexport const listProducts = \r\n(keyword = '', pageNumber = '') => async (dispatch) =>{\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n        )\r\n\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message :\r\n                 error.message\r\n        })\r\n        \r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) =>{\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                ? error.response.data.message :\r\n                 error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: PRODUCT_DELETE_REQUEST,\r\n      });\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n  \r\n      await axios.delete(`/api/products/${id}`, config);\r\n  \r\n      dispatch({\r\n        type: PRODUCT_DELETE_SUCCESS,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_DELETE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n    \r\n    const { data } = await axios.post(`/api/products`, {}, config);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST,\r\n    });\r\n  \r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n      };\r\n  \r\n    const { data } = await axios.put(`/api/products/${product._id}`, product, config);\r\n  \r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_UPDATE_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n  }\r\n};\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\r\n    });\r\n  \r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n      };\r\n  \r\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n  \r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_CREATE_REVIEW_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n  }\r\n};\r\n\r\nexport const listTopProducts = () => async (dispatch) =>{\r\n  try {\r\n      dispatch({ type: PRODUCT_TOP_REQUEST })\r\n\r\n      const { data } = await axios.get(`/api/products/top`)\r\n\r\n      dispatch({\r\n          type: PRODUCT_TOP_SUCCESS,\r\n          payload: data,\r\n      })\r\n  } catch (error) {\r\n      dispatch({\r\n          type: PRODUCT_TOP_FAIL,\r\n          payload:\r\n              error.response && error.response.data.message\r\n              ? error.response.data.message :\r\n               error.message\r\n      })\r\n      \r\n  }\r\n}","import React from 'react'\r\nimport { Spinner } from 'react-bootstrap'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <Spinner\r\n            animation='border'\r\n            role='status'\r\n            style={{\r\n                width: '100px',\r\n                height: '100px',\r\n                margin: 'auto',\r\n                display: 'block',\r\n            }}\r\n        >\r\n            <span className='sr-only'>Loading...</span>\r\n        </Spinner>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React from 'react'\r\nimport { Alert } from 'react-bootstrap'\r\n\r\nconst Message = ({ variant, children }) => {\r\n    return <Alert variant={variant}>{children}</Alert>\r\n}\r\n\r\nMessage.defaultProps ={\r\n    variant: 'info'\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport { Pagination } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n   return pages > 1 && (\r\n      <Pagination>\r\n         {[...Array(pages).keys()].map(x => (\r\n            <LinkContainer \r\n               key={x + 1} \r\n               to={\r\n                  !isAdmin \r\n                  ? keyword \r\n                     ? `/search/${keyword}/page/${x+1}` \r\n                     : `/page/${x+1}` \r\n                  : `/admin/productlist/${x+1}`\r\n               }\r\n            >\r\n               <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n            </LinkContainer>\r\n         ))}\r\n      </Pagination>\r\n\r\n   )\r\n}\r\n\r\nexport default Paginate\r\n","import React from 'react'\r\nimport { Helmet } from 'react-helmet'\r\n\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n   return (\r\n      <Helmet>\r\n         <title>{title}</title>\r\n         <meta name='description' content={description} />\r\n         <meta name='keywords' content={keywords} />\r\n         \r\n      </Helmet>\r\n   )\r\n}\r\n\r\nMeta.defaultProps = {\r\n   title: 'Welcome To ProShop',\r\n   description: 'We sell the best products for cheap',\r\n   keywords: 'electronics, buy electronics, cheap electronics'\r\n}\r\n\r\nexport default Meta\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ( {value, text, color} ) => {\r\n    return (\r\n        <div className='rating'>\r\n            <span>\r\n                <i style={{color}}\r\n                 className={\r\n                    value >= 1 \r\n                    ? 'fas fa-star' \r\n                    : value >= 0.5 \r\n                    ?'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                className={ \r\n                    value >= 2 \r\n                    ? 'fas fa-star' \r\n                    : value >=1.5 \r\n                    ?'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                 className={\r\n                value >= 3 \r\n                ? 'fas fa-star' \r\n                : value >= 2.5 \r\n                ? 'fas fa-star-half-alt' \r\n                : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                 className={\r\n                    value >= 4 \r\n                    ? 'fas fa-star' \r\n                   : value >=3.5\r\n                   ?'fas fa-star-half-alt' \r\n                   : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span>\r\n                <i style={{color}}\r\n                 className={\r\n                    value >= 5 \r\n                    ? 'fas fa-star' \r\n                    : value >=4.5 \r\n                    ?'fas fa-star-half-alt' \r\n                    : 'far fa-star'\r\n                }>\r\n                </i>\r\n            </span>\r\n            <span> {text && text} </span>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nRating.defaultProps ={\r\n    color: '#f8e825',\r\n}\r\n\r\nRating.protoType = {\r\n    value:PropTypes.number.isRequired,\r\n    text:PropTypes.string.isRequired,\r\n    color:PropTypes.string\r\n}\r\n\r\nexport default Rating\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Card } from 'react-bootstrap'\r\nimport Rating from './Rating'\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n      <Card className='my-3 p-3 rounded'>\r\n          <Link to={`/product/${product._id}`}>\r\n              <Card.Img src={product.image} variant='top'/>\r\n          </Link>\r\n\r\n          <Card.Body>\r\n            <Link to={`/product/${product._id}`}>\r\n              <Card.Title  as='div'>\r\n                  <strong> {product.name} </strong>\r\n                </Card.Title>\r\n            </Link>\r\n\r\n            <Card.Text as='div'>\r\n              <Rating \r\n                value={product.rating} \r\n                text={`${product.numReviews} reviews`}\r\n                />\r\n            </Card.Text>\r\n            \r\n            <Card.Text as='h3'> ${product.price}</Card.Text>\r\n          </Card.Body>\r\n      </Card>    \r\n  )\r\n}\r\n\r\nexport default Product\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Carousel, Image } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from './Loader'\r\nimport Message from './Message'\r\nimport { listTopProducts } from '../actions/productActions'\r\n\r\nconst ProductCarousel = () => {\r\n   const dispatch = useDispatch()\r\n\r\n   const productTopRated = useSelector(state => state.productTopRated)\r\n   const { loading, error, products } = productTopRated\r\n\r\n   useEffect(() => {\r\n      dispatch(listTopProducts())\r\n   }, [dispatch])\r\n\r\n   return loading ? (\r\n      <Loader />\r\n   ) : error ? (\r\n      <Message variant='danger'>{error}</Message>\r\n   ) : (\r\n      <Carousel pause='hover' className='bg-dark'>\r\n         {products.map(product => (\r\n            <Carousel.Item key={product._id}>\r\n               <Link to={`/product/${product._id}`}>\r\n                  <Image src={product.image} alt={product.name} fluid />\r\n                  <Carousel.Caption className='carousel-caption'>\r\n                     <h2>\r\n                        {product.name} (${product.price})\r\n                     </h2>\r\n                  </Carousel.Caption>\r\n               </Link>\r\n            </Carousel.Item>\r\n         ))}\r\n      </Carousel>\r\n   )\r\n}\r\n\r\nexport default ProductCarousel\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { listProducts } from '../actions/productActions'\r\nimport Loader from '../components/Loader'\r\nimport Message from '../components/Message'\r\nimport Paginate from '../components/Paginate'\r\nimport Meta from '../components/Meta'\r\nimport Product from '../components/Product'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch =  useDispatch()\r\n\r\n    const  { loading, error, products, page, pages } = useSelector(state => state.productList)\r\n \r\n    useEffect(() =>{\r\n        dispatch(listProducts(keyword, pageNumber))\r\n    }, [dispatch, keyword, pageNumber])\r\n    return (\r\n        <>\r\n        <Meta />\r\n        {!keyword ? (\r\n        <ProductCarousel />\r\n        ) : (\r\n            <Link to='/' className='btn btn-light'>\r\n                Go Back\r\n            </Link>\r\n        )}\r\n        <br></br>\r\n        <h1>Latest Products</h1>\r\n        { loading ? (\r\n            <Loader />\r\n             ) : error ? (\r\n             <Message variant ='danger'>{error}</Message> \r\n             ) : (\r\n                 <>\r\n                <Row>\r\n                    {products.map( product =>(\r\n                    <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                        <Product  product={product} />\r\n                    </Col>\r\n                ))}\r\n                </Row>\r\n                <Paginate \r\n                    pages={pages} \r\n                    page={page} \r\n                    keyword={keyword ? keyword : ''} \r\n                />\r\n                </>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen \r\n","import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from 'react-bootstrap'\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET } from '../constants/productConstants'\r\n\r\nconst ProductScreen = ( {history, match}) => {\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n     const dispatch = useDispatch()\r\n\r\n     const productDetails = useSelector(state => state.productDetails)\r\n     const { loading, error, product} = productDetails\r\n\r\n     const productCreateReview = useSelector(state => state.productCreateReview)\r\n     const { success:successProductReview, error:errorProductReview } = productCreateReview\r\n\r\n     const userLogin = useSelector(state => state.userLogin)\r\n     const { userInfo } = userLogin\r\n\r\n    useEffect(() =>{\r\n        if (successProductReview) {\r\n            alert('Review Submitted!')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n       dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match, successProductReview])  \r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(createProductReview(match.params.id, {\r\n            rating, \r\n            comment\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n         <Link className='btn btn-light my-3' to='/'>\r\n             Go Back\r\n         </Link>\r\n         {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : \r\n        (\r\n            <>\r\n            <Meta title={product.name} />\r\n            <Row>\r\n            <Col md={6}>\r\n                <Image src={product.image} alt={product.name}  fluid/>\r\n            </Col>\r\n            <Col md={3}>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <h3>{product.name}</h3>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Rating \r\n                         value={product.rating}\r\n                         text={`${product.numReviews} reviews`}\r\n                        />\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Price: ${product.price}\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        Description: {product.description}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n                <Card>\r\n                <ListGroup variant='flush'>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Price:</Col>\r\n                            <Col>\r\n                              <strong>${product.price}</strong>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n                    <ListGroup.Item>\r\n                        <Row>\r\n                            <Col>Status:</Col>\r\n                            <Col>\r\n                             {product.countInStock > 0 ? 'In Stock' : 'Out Of Stock'}\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroup.Item>\r\n\r\n                    {product.countInStock > 0 && (\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Qty</Col>\r\n                                <Col>\r\n                                    <Form.Control as='select' value={qty}\r\n                                     onChange={(e) =>\r\n                                        setQty(e.target.value)}>\r\n\r\n                                        {[...Array(product.countInStock).keys()].map((x) => (\r\n                                            <option key={x + 1} value={x + 1}>\r\n                                                {x + 1}\r\n                                            </option>\r\n                                        ))}\r\n                                    </Form.Control>\r\n                                </Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                    )}\r\n\r\n                    <ListGroup.Item>\r\n                        <Button\r\n                           onClick={addToCartHandler} \r\n                           className='btn-block' \r\n                           type='button'\r\n                           disabled={product.countInStock === 0}\r\n                        >\r\n                           Add To Cart\r\n                        </Button>\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n                </Card> \r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col md={6}>\r\n                <h2>Reviews</h2>\r\n                {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                <ListGroup variant='flush'>\r\n                    {product.reviews.map((review) => (\r\n                        <ListGroup.Item key={review._id}>\r\n                            <strong>{review.name}</strong>\r\n                            <Rating value={review.rating} />\r\n                            <p>{review.comment}</p>\r\n                            {/* <p>{review.createdAt.substring(0, 10)}</p> */}\r\n                        </ListGroup.Item>\r\n                    ))}\r\n                    <ListGroup.Item>\r\n                        <h2>Write a Customer Review</h2>\r\n                        {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                        {userInfo ? (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='rating'>\r\n                                    <Form.Label>Rating</Form.Label>\r\n                                    <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                                        <option value=''>Select...</option>\r\n                                        <option value='1'>1 - Poor</option>\r\n                                        <option value='2'>2 - Fair</option>\r\n                                        <option value='3'>3 - Good</option>\r\n                                        <option value='4'>4 - Very Good</option>\r\n                                        <option value='5'>5 - Excellent</option>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Form.Group controlId='comment'>\r\n                                    <Form.Label>Comment</Form.Label>\r\n                                    <Form.Control \r\n                                        as='textarea'\r\n                                        row='2'\r\n                                        value={comment}\r\n                                        onChange={(e) => setComment(e.target.value)}>\r\n                                    </Form.Control>\r\n                                </Form.Group>\r\n                                <Button type='submit' className='mt-3' variant='primary'>Submit</Button>\r\n                            </Form>\r\n                            ) : (\r\n                            <Message>\r\n                                Please <Link to='/login'>sign in</Link> to write a review\r\n                            </Message>\r\n                            )}\r\n                    </ListGroup.Item>\r\n                </ListGroup>\r\n            </Col>\r\n        </Row>\r\n        </>\r\n         )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","import axios from \"axios\";\r\nimport { CART_ADD_ITEM,\r\n        CART_REMOVE_ITEM,\r\n        CART_SAVE_PAYMENT_METHOD,\r\n        CART_SAVE_SHIPPING_ADDRESS,\r\n    } from '../constants/cartConstants'\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            image: data.image,\r\n            price: data.price,\r\n            countInStock: data.countInStock,\r\n            qty,\r\n        },\r\n    })\r\n\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload: id,\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n}\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_SHIPPING_ADDRESS,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('shippingAddress', JSON.stringify(data))\r\n}\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: CART_SAVE_PAYMENT_METHOD,\r\n        payload: data,\r\n    })\r\n    localStorage.setItem('paymentMethod', JSON.stringify(data))\r\n}","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n\r\n    const qty = location.search ? Number(location.search.split('=')[1]) : 1\r\n    \r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n    const { cartItems } = cart\r\n\r\n    useEffect(() => {\r\n        if(productId) {\r\n            dispatch(addToCart(productId, qty))\r\n        }\r\n    }, [dispatch, productId, qty])\r\n\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id))\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        history.push('/login?redirect=shipping')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={8}>\r\n                <h1>Shopping Cart</h1>\r\n                {cartItems.length === 0 ? (\r\n                    <Message>\r\n                        Your cart is empty <Link to='/'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <ListGroup variant='flush'>\r\n                        {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                    <Col md={2}>\r\n                                        <Image src={item.image} alt={item.name} fluid rounded />\r\n                                    </Col>\r\n                                    <Col md={3}>\r\n                                        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                                    </Col>\r\n                                    <Col md={2}>${item.price}</Col>\r\n                                    <Col md={2}>\r\n                                        <Form.Control as='select' value={item.qty}\r\n                                        onChange={(e) => dispatch(addToCart(item.product,\r\n                                         Number(e.target.value)))}>\r\n\r\n                                            {[...Array(item.countInStock).keys()].map((x) => (\r\n                                                <option key={x + 1} value={x + 1}>{x + 1}</option>\r\n                                            ))}\r\n                                        </Form.Control>\r\n                                    </Col>\r\n                                    <Col md={2}>\r\n                                        <Button type='button' variant='light' onClick={() =>\r\n                                        removeFromCartHandler(item.product)}>\r\n                                            <i className='fas fa-trash'></i>\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        ) )}\r\n                    </ListGroup>\r\n                )}\r\n            </Col>\r\n            <Col md={4}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)}) Items</h2>\r\n                            ${cartItems \r\n                                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Button \r\n                                type='buttton' \r\n                                className='btn-block' \r\n                                disabled={cartItems.length === 0} \r\n                                onClick={checkoutHandler}\r\n                                >\r\n                                Proceed To Checkout\r\n                            </Button>\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default CartScreen\r\n","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nconst FormContainer = ({ children }) => {\r\n    return (\r\n        <Container>\r\n            <Row className='justify-content-md-center'>\r\n                <Col xs={12} md={6}>\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n            \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default FormContainer\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { login } from '../actions/userActions'\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { loading, error, userInfo } = userLogin\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(login(email, password))\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign In</h1>\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                      type='email'\r\n                      placeholder='Enter email'\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Enter password'\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='mt-3' type='submit' variant='primary'>Sign In</Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    New Customer?{' '}\r\n                    <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n                        Register\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { register } from '../actions/userActions'\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector(state => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n        if(userInfo) {\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(register(name, email, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h1>Sign Up</h1>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type='name'\r\n                      placeholder='Enter name'\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                      type='email'\r\n                      placeholder='Enter email'\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Enter password'\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Confirm password'\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='mt-3' type='submit' variant='primary'>\r\n                    Register\r\n                </Button>\r\n            </Form>\r\n\r\n            <Row className='py-3'>\r\n                <Col>\r\n                    Have an Account?{' '}\r\n                    <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n                        Login\r\n                    </Link>\r\n                </Col>\r\n            </Row>\r\n            \r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Table, Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions'\r\nimport { listMyOrders } from '../actions/orderAction'\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n    \r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile)\r\n    const { success } = userUpdateProfile\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy)\r\n    const { loading:loadingOrders, error:errorOrders, orders } = orderListMy\r\n\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login') }\r\n         else { \r\n            if(!user.name){\r\n                dispatch(getUserDetails('profile'))\r\n                dispatch(listMyOrders())\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo, user])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if(password !== confirmPassword) {\r\n            setMessage('Password do not match')\r\n        } else {\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            {error && <Message variant='danger'>{error}</Message>}\r\n            {success && <Message variant='success'>Profile Updated</Message>}\r\n            {loading && <Loader />}\r\n            <Form onSubmit={submitHandler}>\r\n\r\n            <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                      type='name'\r\n                      placeholder='Enter name'\r\n                      value={name}\r\n                      onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                \r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                      type='email'\r\n                      placeholder='Enter email'\r\n                      value={email}\r\n                      onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Enter password'\r\n                      value={password}\r\n                      onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm Password</Form.Label>\r\n                    <Form.Control\r\n                      type='password'\r\n                      placeholder='Confirm password'\r\n                      value={confirmPassword}\r\n                      onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button className='mt-3' type='submit' variant='primary'>\r\n                    Update\r\n                </Button>\r\n            </Form>\r\n\r\n            </Col>\r\n            <Col md={9}>\r\n                <h2>My Orders</h2> \r\n                {loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>\r\n                    {errorOrders}</Message> : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>DATE</th>\r\n                                    <th>TOTAL</th>\r\n                                    <th>PAID</th>\r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {orders.map((order) => (\r\n                                    <tr key={order._id}>\r\n                                        <td>{order._id}</td>\r\n                                        <td>{order.createdAt.substring(0, 10)}</td>\r\n                                        <td>{order.totalPrice}</td>\r\n                                        <td>{order.isPaid ? (\r\n                                            order.paidAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n                                        <td>{order.isDelivered ? (\r\n                                            order.deliveredAt.substring(0, 10)\r\n                                        ) : (\r\n                                            <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                                        )}\r\n                                        </td>\r\n                                        <td>\r\n                                            <LinkContainer to={`/order/${order._id}`}>\r\n                                                <Button className='btn-sm' variant='light'>Details</Button>\r\n                                            </LinkContainer>\r\n                                        </td>\r\n                                    </tr>\r\n                                ))}\r\n                            </tbody>\r\n                        </Table> \r\n                    )}\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen\r\n","import axios from \"axios\";\r\nimport {\r\n  ORDER_ALL_LIST_FAIL,\r\n  ORDER_ALL_LIST_REQUEST,\r\n  ORDER_ALL_LIST_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_REQUEST,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_MY_LIST_FAIL,\r\n  ORDER_MY_LIST_REQUEST,\r\n  ORDER_MY_LIST_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS,\r\n} from \"../constants/orderConstants\";\r\n\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: ORDER_CREATE_REQUEST,\r\n      })\r\n\r\n      const { userLogin: {userInfo} } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              'Content-Type': 'application/json',\r\n              Authorization: `Bearer ${userInfo.token}`\r\n          },\r\n      }\r\n\r\n      const { data } = await axios.post(`api/orders`, order, config)\r\n      console.log(data)\r\n      dispatch({\r\n          type: ORDER_CREATE_SUCCESS,\r\n          payload: data,\r\n      })\r\n\r\n  } catch (error) {\r\n      dispatch({\r\n          type: ORDER_CREATE_FAIL,\r\n          payload:\r\n              error.response && error.response.data.message\r\n              ? error.response.data.message :\r\n               error.message\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n    console.log(\"req fire\");\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const payOrder =\r\n  (orderId, paymentResult) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      });\r\n\r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState();\r\n      const config = {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      };\r\n\r\n      const { data } = await axios.put(\r\n        `/api/orders/${orderId}/pay`,\r\n        paymentResult,\r\n        config\r\n      );\r\n\r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/orders/${order._id}/deliver`,{}, config);\r\n\r\n    dispatch({\r\n      type: ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_MY_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_MY_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_MY_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listAllOrders = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_ALL_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: ORDER_ALL_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_ALL_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react'\r\nimport { Nav } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n    return (\r\n        <Nav className='justify-content-center mb-4'>\r\n            <Nav.Item className=\"p-0 m-0\">\r\n                {step1 ? (\r\n                    <LinkContainer to='/login'>\r\n                        <Nav.Link>Sign In</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                 <Nav.Link disabled>Sign In</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item className=\"p-0 m-0\">\r\n                {step2 ? (\r\n                    <LinkContainer to='/shipping'>\r\n                        <Nav.Link>Shipping</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                 <Nav.Link disabled>Shipping</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item className=\"p-0 m-0\">\r\n                {step3 ? (\r\n                    <LinkContainer to='/payment'>\r\n                        <Nav.Link>Payment</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                 <Nav.Link disabled>Payment</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n            <Nav.Item className=\"p-0 m-0\">\r\n                {step4 ? (\r\n                    <LinkContainer to='/Placeorder'>\r\n                        <Nav.Link>Place Order</Nav.Link>\r\n                    </LinkContainer>\r\n                ) : (\r\n                 <Nav.Link disabled>Place Order</Nav.Link>\r\n                )}\r\n            </Nav.Item>\r\n\r\n        </Nav>\r\n    )\r\n}\r\n\r\nexport default CheckoutSteps\r\n","import React, { useState } from 'react'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { saveShippingAddress } from '../actions/cartActions'\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    const [address, setAddress] = useState(shippingAddress.address)\r\n    const [city, setCity] = useState(shippingAddress.city)\r\n    const [postalCode, setPostalCode] = useState(shippingAddress.postalCode)\r\n    const [country, setCountry] = useState(shippingAddress.country)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveShippingAddress({ address, city, postalCode, country }))\r\n        history.push('/payment') //this is the next step in the project\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 />\r\n            <h1>Shipping</h1>\r\n            <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Enter address'\r\n                      value={address}\r\n                      required\r\n                      onChange={(e) => setAddress(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Enter city'\r\n                      value={city}\r\n                      required\r\n                      onChange={(e) => setCity(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Enter postal Code'\r\n                      value={postalCode}\r\n                      required\r\n                      onChange={(e) => setPostalCode(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Enter country'\r\n                      value={country}\r\n                      required\r\n                      onChange={(e) => setCountry(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary' className='mt-3'>\r\n                    Continue\r\n                </Button>\r\n                \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default ShippingScreen\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if(!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder') //this is the next step in the project\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                 <Form.Group>\r\n                     <Form.Label as='legend'>Select Method</Form.Label>\r\n                 <Col>\r\n                    <Form.Check \r\n                        type='radio'\r\n                        label='PayPal or Credit Card' \r\n                        id='PayPal'\r\n                        name='paymentMethod' \r\n                        value='PayPal' \r\n                        checked \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check>\r\n                    {/* <Form.Check \r\n                        type='redio'\r\n                        label='Stripe' \r\n                        id='Stripe'\r\n                        name='paymentMethod' \r\n                        value='Stripe' \r\n                        onChange={(e) => setPaymentMethod(e.target.value)}\r\n                    ></Form.Check> */}\r\n                 </Col>\r\n                 </Form.Group> \r\n                <Button type='submit' variant='primary' className='mt-3'>\r\n                    Continue\r\n                </Button>\r\n                \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n","import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { createOrder } from '../actions/orderAction'\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n    const cart = useSelector(state => state.cart)\r\n\r\n    //calculate prices\r\n\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    cart.itemsPrice = addDecimals(cart.cartItems.reduce(\r\n        (acc, item) => acc +item.price * item.qty, 0\r\n    ))\r\n\r\n    cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100)\r\n\r\n    cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)))\r\n\r\n    cart.totalPrice = (\r\n        Number(cart.itemsPrice) +\r\n        Number(cart.shippingPrice) +\r\n        Number(cart.taxPrice)\r\n    ).toFixed(2)\r\n\r\n    const orderCreate = useSelector(state => state.orderCreate)\r\n    const { order, success, error } = orderCreate\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            history.push(`/order/${order._id}`)\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n    \r\n    const placeOrderHandler= () => {\r\n        dispatch(createOrder({\r\n            orderItems: cart.cartItems,\r\n            shippingAddress: cart.shippingAddress,\r\n            paymentMethod: cart.paymentMethod,\r\n            itemsPrice: cart.itemsPrice,\r\n            shippingPrice: cart.shippingPrice,\r\n            taxPrice: cart.taxPrice,\r\n            totalPrice: cart.totalPrice,\r\n        }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutSteps step1 step2 step3 step4 />    \r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                        <h2>Shipping</h2>\r\n                        <p>\r\n                            <strong>Address:</strong>\r\n                            {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                            {cart.shippingAddress.postalCode},{' '}\r\n                            {cart.shippingAddress.country}\r\n                        </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <strong>Method: </strong>\r\n                            {cart.paymentMethod}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            {cart.cartItems.length === 0 ? <Message>Your cart is empty\r\n                            </Message> : (\r\n                                <ListGroup variant='flush'>\r\n                                    {cart.cartItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col md={1}>\r\n                                                    <Image src={item.image} alt={item.name}\r\n                                                    fluid rounded />\r\n                                                </Col>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                </Col>\r\n                                                </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                  <Card>\r\n                    <ListGroup variant='flush'>\r\n                     <ListGroup.Item>\r\n                        <h2>Order Summery</h2>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Items</Col>\r\n                                <Col>${cart.itemsPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Shipping</Col>\r\n                                <Col>${cart.shippingPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Tax</Col>\r\n                                <Col>${cart.taxPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n                                                                    \r\n                        <ListGroup.Item>\r\n                            <Row>\r\n                                <Col>Total</Col>\r\n                                <Col>${cart.totalPrice}</Col>\r\n                            </Row>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            {error && <Message variant='danger'>{error}</Message>}\r\n                        </ListGroup.Item>\r\n                                                                    \r\n                        <ListGroup.Item>\r\n                            <Button type='button' className='btn-block' disabled={cart.cartItems === 0}\r\n                                onClick={placeOrderHandler}>Place Order</Button>\r\n                        </ListGroup.Item>\r\n                                                                \r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>                                            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceOrderScreen\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Card, Col, Image, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  deliverOrder,\r\n  getOrderDetails,\r\n  payOrder,\r\n} from \"../actions/orderAction\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport Message from \"../components/Message\";\r\nimport Loader from \"../components/Loader\";\r\nimport axios from \"axios\";\r\nimport {\r\n  ORDER_DELIVER_RESET,\r\n  ORDER_PAY_RESET,\r\n} from \"../constants/orderConstants\";\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n  const dispatch = useDispatch();\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const { order, loading, error } = useSelector(\r\n    (state) => state.orderDetails\r\n  );\r\n\r\n  const { loading: loadingPay, success: successPay } = useSelector(\r\n    (state) => state.orderPay\r\n  );\r\n\r\n  const { loading: loadingDeliver, success: successDeliver } = useSelector(\r\n    (state) => state.orderDeliver\r\n  );\r\n\r\n  const { userInfo } = useSelector((state) => state.userLogin);\r\n\r\n  if (!loading) {\r\n    // calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\");\r\n    }\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get(\"/api/config/paypal\");\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n    if (!order || successPay || successDeliver) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      dispatch({ type: ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [dispatch, orderId, successPay, order, successDeliver, history, userInfo]);\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(orderId);\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(order._id, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant=\"flush\">\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong>\r\n                {order.user.name}\r\n              </p>\r\n              <p>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address:</strong>\r\n                {order.shippingAddress.address},{order.shippingAddress.city},\r\n                {order.shippingAddress.postalCode},\r\n                {order.shippingAddress.country},\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant=\"success\">\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Delivered!</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant=\"success\">Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant=\"danger\">Not Paid!</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant=\"flush\">\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          ></Image>\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n\r\n        <Col md={4}>\r\n          <Card className=\"m-2\">\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>${order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>${order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>${order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>${order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo && //means if you are loged in\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn btn-block\"\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n   const dispatch = useDispatch()\r\n\r\n   const userList = useSelector(state => state.userList)\r\n   const { loading, error, users } = userList\r\n   \r\n   const userLogin = useSelector(state => state.userLogin)\r\n   const { userInfo } = userLogin\r\n   \r\n   const userDelete = useSelector(state => state.userDelete)\r\n   const { success:successDelete } = userDelete\r\n   \r\n   useEffect(() => {\r\n      if(userInfo && userInfo.isAdmin){ \r\n         dispatch(listUsers())\r\n      } else { //not an admin or not loged in\r\n         history.push('/login')\r\n      }\r\n      \r\n   }, [dispatch, history, successDelete, userInfo])\r\n\r\n   const deleteHandler = (id) => {\r\n      if(window.confirm('Are You Sure ?'))\r\n      {\r\n         dispatch(deleteUser(id))\r\n      }\r\n      }\r\n\r\n   return (\r\n      <>\r\n         <h1>Users</h1>\r\n         {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n         : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n               <thead>\r\n                  <tr>\r\n                     <th>ID</th>\r\n                     <th>NAME</th>\r\n                     <th>EMAIL</th>\r\n                     <th>ADMIN</th>\r\n                     <th></th>\r\n                  </tr>\r\n               </thead>\r\n                <tbody>\r\n                   {users.map(user => (\r\n                     <tr key={user._id}>\r\n                         <td>{user._id}</td>\r\n                         <td>{user.name}</td>\r\n                         <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                         <td>\r\n                           {user.isAdmin ? (\r\n                              <i className='fas fa-check' style={{ color: 'green' }}></i>\r\n                           ) : (\r\n                              <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                           )}\r\n                         </td>\r\n                         <td>\r\n                            <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                               <Button variant='light' className='btn-sm'>\r\n                                  <i className='fas fa-edit'></i>\r\n                               </Button>\r\n                            </LinkContainer>\r\n                            <Button variant='danger' className='btn-sm' onClick={() =>\r\n                            deleteHandler(user._id)}>\r\n                               <i className='fas fa-trash'></i>\r\n                            </Button>\r\n                         </td>\r\n                     </tr>\r\n                   ))}\r\n                </tbody>\r\n            </Table>\r\n         )}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default UserListScreen\r\n","import React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetails, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n   const userId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetails = useSelector(state => state.userDetails)\r\n    const { loading, error, user } = userDetails\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { \r\n       loading: loadingUpdate, \r\n       error: errorUpdate, \r\n       success:successUpdate,\r\n      } = userUpdate\r\n\r\n    useEffect(() => {\r\n       if(successUpdate) {\r\n          dispatch({ type: USER_UPDATE_RESET })\r\n          history.push('/admin/userlist')\r\n       } else {\r\n         if(!user.name || user._id !== userId) {\r\n            dispatch(getUserDetails(userId))\r\n         } else {\r\n            setName(user.name)\r\n            setEmail(user.email)\r\n            setIsAdmin(user.isAdmin)\r\n         }\r\n       }\r\n    }, [dispatch, userId, user, history, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n      <>\r\n         <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n            Go Back\r\n         </Link>\r\n        <FormContainer>\r\n            <h1>Edit User</h1>\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                          type='name'\r\n                          placeholder='Enter name'\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='email'>\r\n                        <Form.Label>Email Address</Form.Label>\r\n                        <Form.Control\r\n                          type='email'\r\n                          placeholder='Enter email'\r\n                          value={email}\r\n                          onChange={(e) => setEmail(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                     <br></br>\r\n                    <Form.Group controlId='isadmin'>\r\n                        <Form.Check\r\n                          type='checkbox'\r\n                          label='Is Admin'\r\n                          checked={isAdmin}\r\n                          onChange={(e) => setIsAdmin(e.target.checked)}>\r\n                        </Form.Check>\r\n                    </Form.Group>\r\n    \r\n                    <Button className='mt-3' type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n           \r\n            \r\n        </FormContainer>\r\n      </>  \r\n    )\r\n}\r\n\r\nexport default UserEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProducts, deleteProduct, createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport Paginate from '../components/Paginate'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n   const pageNumber = match.params.pageNumber || 1\r\n   const dispatch = useDispatch()\r\n\r\n   const productList = useSelector(state => state.productList)\r\n   const { loading, error, products, page, pages } = productList\r\n\r\n   const productDelete = useSelector(state => state.productDelete)\r\n   const {\r\n       loading:loadingDelete, \r\n       error:errorDelete, \r\n       success:successDelete \r\n   } = productDelete\r\n\r\n   const productCreate = useSelector(state => state.productCreate)\r\n   const {\r\n      loading:loadingCreate, \r\n      error:errorCreate, \r\n      success:successCreate,\r\n      product:createdProduct\r\n   } = productCreate\r\n   \r\n   const userLogin = useSelector(state => state.userLogin)\r\n   const { userInfo } = userLogin\r\n   \r\n   useEffect(() => {\r\n      dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n      if(!userInfo.isAdmin){ \r\n         history.push('/login')\r\n      }\r\n      \r\n      if(successCreate){\r\n         history.push(`/admin/product/${createdProduct._id}/edit`)\r\n      } else { \r\n         dispatch(listProducts('', pageNumber)) //the empty string is the keyword\r\n      }\r\n      \r\n   }, [\r\n      dispatch,\r\n      history,\r\n      userInfo,\r\n      successDelete,\r\n      successCreate,\r\n      createdProduct,\r\n      pageNumber,\r\n   ])\r\n\r\n   const deleteHandler = (id) => {\r\n      if(window.confirm('Are You Sure ?')) {\r\n        dispatch(deleteProduct(id))\r\n      }\r\n   }\r\n\r\n   const createProductHandler = () => {\r\n      dispatch(createProduct())\r\n   }   \r\n\r\n   return (\r\n      <>\r\n         <Row className='align[items-center'>\r\n            <Col>\r\n               <h1>Products</h1>\r\n            </Col>\r\n            <Col className='text-right'>\r\n               <Button className='my-3' onClick={createProductHandler}>\r\n                  <i className='fas fa-plus'></i> Create Product\r\n               </Button>\r\n            </Col>\r\n         </Row>\r\n         {loadingDelete && <Loader />}\r\n         {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n         {loadingCreate && <Loader />}\r\n         {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n         {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n         : (\r\n            <>\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n               <thead>\r\n                  <tr>\r\n                     <th>ID</th>\r\n                     <th>NAME</th>\r\n                     <th>PRICE</th>\r\n                     <th>CATEGORY</th>\r\n                     <th>BRAND</th>\r\n                     <th></th>\r\n                  </tr>\r\n               </thead>\r\n                <tbody>\r\n                   {products.map(product => (\r\n                     <tr key={product._id}>\r\n                         <td>{product._id}</td>\r\n                         <td>{product.name}</td>\r\n                         <td>${product.price}</td>\r\n                         <td>{product.category}</td>\r\n                         <td>{product.brand}</td>\r\n                         <td>\r\n                            <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                               <Button variant='light' className='btn-sm'>\r\n                                  <i className='fas fa-edit'></i>\r\n                               </Button>\r\n                            </LinkContainer>\r\n                            <Button variant='danger' className='btn-sm'\r\n                             onClick={() => deleteHandler(product._id)}>\r\n                               <i className='fas fa-trash'></i>\r\n                            </Button>\r\n                         </td>\r\n                     </tr>\r\n                   ))}\r\n                </tbody>\r\n            </Table>\r\n            <Paginate page={page} pages={pages} isAdmin={true} />\r\n            </>\r\n         )}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default ProductListScreen\r\n","import axios from 'axios'\r\nimport React, {useState, useEffect} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Form, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { listProductDetails, updateProduct } from '../actions/productActions'\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n   const productId = match.params.id\r\n\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [image, setImage] = useState('')\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading, setUploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n   \r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { \r\n       loading: loadingUpdate, \r\n       error: errorUpdate, \r\n       success:successUpdate,\r\n      } = productUpdate\r\n\r\n    useEffect(() => {\r\n       if(successUpdate) {\r\n          dispatch({ type: PRODUCT_UPDATE_RESET })\r\n          history.push('/admin/productlist')\r\n       } else {\r\n         if(!product.name || product._id !== productId) {\r\n            dispatch(listProductDetails(productId))\r\n         } else {\r\n            setName(product.name)\r\n            setPrice(product.price)\r\n            setImage(product.image)\r\n            setBrand(product.brand)\r\n            setCategory(product.category)\r\n            setCountInStock(product.countInStock)\r\n            setDescription(product.description) \r\n         }\r\n       }\r\n    }, [dispatch, productId, product, history, successUpdate])\r\n\r\n    const uploadFileHandler = async (e) => {\r\n      const file = e.target.files[0] //what happend when upload is that we get access to e.target.files which is an array because you have ability to upload mutiple files,, [0] because we need a single file\r\n      const formData = new FormData()\r\n      formData.append('image', file)\r\n      setUploading(true)\r\n\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-Type': 'multipart/form-data',\r\n          },\r\n        }\r\n        const { data } = await axios.post('/api/upload', formData, config)\r\n        setImage(data) //data is the path\r\n        setUploading(false)\r\n        \r\n      } catch (error) {\r\n        console.error(error)\r\n        setUploading(false)\r\n        \r\n      }\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateProduct({\r\n           _id: productId,\r\n           name,\r\n           price,\r\n           image,\r\n           brand,\r\n           category,\r\n           countInStock,\r\n           description,\r\n        }))\r\n    }\r\n\r\n    return (\r\n      <>\r\n         <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n            Go Back\r\n         </Link>\r\n        <FormContainer>\r\n            <h1>Edit Product</h1>\r\n\r\n            {loadingUpdate && <Loader />}\r\n            {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n            {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n                <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                          type='name'\r\n                          placeholder='Enter name'\r\n                          value={name}\r\n                          onChange={(e) => setName(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n                    \r\n                    <Form.Group controlId='price'>\r\n                        <Form.Label>Price</Form.Label>\r\n                        <Form.Control\r\n                          type='number'\r\n                          placeholder='Enter price'\r\n                          value={price}\r\n                          onChange={(e) => setPrice(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='image'>\r\n                    <Form.Label>Image</Form.Label>\r\n                        <Form.Control\r\n                          type='text'\r\n                          placeholder='Enter image url'\r\n                          value={image}\r\n                          onChange={(e) => setImage(e.target.value)}>\r\n                        </Form.Control>\r\n                        <br></br>\r\n                        <Form.File \r\n                          id='image-file' \r\n                          // label='Choose File' \r\n                          custom\r\n                          onChange={uploadFileHandler}\r\n                        >\r\n                          {uploading && <Loader />}\r\n                        </Form.File>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='brand'>\r\n                    <Form.Label>Brand</Form.Label>\r\n                        <Form.Control\r\n                          type='text'\r\n                          placeholder='Enter brand'\r\n                          value={brand}\r\n                          onChange={(e) => setBrand(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='category'>\r\n                    <Form.Label>Category</Form.Label>\r\n                        <Form.Control\r\n                          type='text'\r\n                          placeholder='Enter category'\r\n                          value={category}\r\n                          onChange={(e) => setCategory(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='countInStock'>\r\n                        <Form.Label>Count In Stock</Form.Label>\r\n                        <Form.Control\r\n                          type='number'\r\n                          placeholder='Enter countInStock'\r\n                          value={countInStock}\r\n                          onChange={(e) => setCountInStock(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId='description'>\r\n                    <Form.Label>Description</Form.Label>\r\n                        <Form.Control\r\n                          type='text'\r\n                          placeholder='Enter description'\r\n                          value={description}\r\n                          onChange={(e) => setDescription(e.target.value)}>\r\n                        </Form.Control>\r\n                    </Form.Group>\r\n\r\n    \r\n                    <Button className='mt-3' type='submit' variant='primary'>\r\n                        Update\r\n                    </Button>\r\n                </Form>\r\n            )}\r\n           \r\n            \r\n        </FormContainer>\r\n      </>  \r\n    )\r\n}\r\n\r\nexport default ProductEditScreen\r\n","import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listAllOrders } from '../actions/orderAction'\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n   const dispatch = useDispatch()\r\n\r\n   const orderList = useSelector(state => state.orderList)\r\n   const { loading, error, orders } = orderList\r\n   \r\n   const userLogin = useSelector(state => state.userLogin)\r\n   const { userInfo } = userLogin\r\n   \r\n   useEffect(() => {\r\n      if(userInfo && userInfo.isAdmin){ \r\n         dispatch(listAllOrders())\r\n      } else { //not an admin or not loged in\r\n         history.push('/login')\r\n      }\r\n      \r\n   }, [dispatch, history, userInfo])\r\n\r\n   return (\r\n      <>\r\n         <h1>Orders</h1>\r\n         {loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message>\r\n         : (\r\n            <Table striped bordered hover responsive className='table-sm'>\r\n               <thead>\r\n                  <tr>\r\n                     <th>ID</th>\r\n                     <th>USER</th>\r\n                     <th>DATE</th>\r\n                     <th>TOTAL</th>\r\n                     <th>PAID</th>\r\n                     <th>DELIVERED</th>\r\n                     <th></th>\r\n                  </tr>\r\n               </thead>\r\n                <tbody>\r\n                   {orders.map(order => (\r\n                     <tr key={order._id}>\r\n                         <td>{order._id}</td>\r\n                         <td>{order.user && order.user.name}</td>\r\n                         <td>{order.createdAt.substring(0, 10)}</td>\r\n                         <td>${order.totalPrice}</td>\r\n                         <td>\r\n                           {order.isPaid ? (\r\n                                 order.paidAt.substring(0, 10)\r\n                              ) : (\r\n                                 <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                              ) }\r\n                          </td>\r\n                          <td>\r\n                           {order.isDelivered ? (\r\n                                 order.deliveredAt.substring(0, 10)\r\n                              ) : (\r\n                                 <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                              ) }\r\n                          </td>    \r\n                         <td>\r\n                            <LinkContainer to={`/order/${order._id}`}>\r\n                               <Button variant='light' className='btn-sm'>\r\n                                  Details\r\n                               </Button>\r\n                            </LinkContainer>\r\n                       \r\n                         </td>\r\n                     </tr>\r\n                   ))}\r\n                </tbody>\r\n            </Table>\r\n         )}\r\n      </>\r\n   )\r\n}\r\n\r\nexport default OrderListScreen\r\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport HomeScreen from './screens/HomeScreen'\nimport ProductScreen from './screens/ProductScreen'\nimport CartScreen from './screens/CartScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProfileScreen from './screens/ProfileScreen'\nimport ShippingScreen from './screens/ShippingScreen'\nimport PaymentScreen from './screens/PaymentScreen'\nimport PlaceOrderScreen from './screens/PlaceOrderScreen'\nimport OrderScreen from './screens/OrderScreen'\nimport UserListScreen from './screens/UserListScreen'\nimport UserEditScreen from './screens/UserEditScreen'\nimport ProductListScreen from './screens/ProductListScreen '\nimport ProductEditScreen from './screens/ProductEditScreen'\nimport OrderListScreen from './screens/OrderListScreen'\n\nconst  App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/order/:id' component={OrderScreen} /> \n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/Cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/search/:keyword/page/:pageNumber' component={HomeScreen} exact />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n     <Footer />\n    </Router>\n  );\n} \n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store'\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}